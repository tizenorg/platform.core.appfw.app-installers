CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12)
PROJECT(CommonAppInstaller)
SET(BINDIR "${CMAKE_INSTALL_PREFIX}/bin")
SET(LIBDIR "${CMAKE_INSTALL_LIBDIR}")
SET(SHAREDIR "${CMAKE_INSTALL_PREFIX}/share")
SET(INCLUDEDIR "${PREFIX}/include")
SET(VERSION_MAJOR 0)
SET(VERSION "${VERSION_MAJOR}.1.0")
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF(NOT CMAKE_BUILD_TYPE)

# Compiler flags
SET(CMAKE_C_FLAGS_PROFILING    "-O2")
SET(CMAKE_CXX_FLAGS_PROFILING  "-O2 -std=c++11")
SET(CMAKE_C_FLAGS_DEBUG        "-O0 -g")
SET(CMAKE_CXX_FLAGS_DEBUG      "-O0 -std=c++11 -g")
SET(CMAKE_C_FLAGS_RELEASE      "-O2 -g")
SET(CMAKE_CXX_FLAGS_RELEASE    "-O2 -std=c++11 -g")
SET(CMAKE_CXX_FLAGS_CCOV       "-O0 -std=c++11 -g --coverage")

# Targets
SET(TARGET_LIBNAME_COMMON "common-installer")
SET(TARGET_LIBNAME_SIGNATURE "common-installer-signature")
SET(TARGET_LIBNAME_UTILS "common-installer-utils")
SET(TARGET_LIBNAME_WIDGET_MANIFEST_PARSER "common-installer-widget-manifest-parser")
SET(TARGET_WGT_BACKEND "wgt-backend")
SET(TARGET_XPK_BACKEND "xpk-backend")
SET(TARGET_NATIVE_BACKEND "native-backend")

ADD_DEFINITIONS("-Wall")
ADD_DEFINITIONS("-Wextra")
ADD_DEFINITIONS("-fPIE")
ADD_DEFINITIONS("-fPIC")
# This flag is needed, because otherwise _xmlSecDSigCtx structure
# will use size_t in app-installers and unsigned int in xmlsec1 for sizes
# As a result structure size in function from xmlsec1 will differ from
# size in app-installers
ADD_DEFINITIONS("-DXMLSEC_NO_SIZE_T")

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/")
INCLUDE(FindPkgConfig)
INCLUDE(ApplyPkgConfig)

# Find all needed packages once
PKG_CHECK_MODULES(PKGMGR_DEPS REQUIRED pkgmgr)
PKG_CHECK_MODULES(PKGMGR_INFO_DEPS REQUIRED pkgmgr-info)
PKG_CHECK_MODULES(PKGMGR_PARSER_DEPS REQUIRED pkgmgr-parser)
PKG_CHECK_MODULES(PKGMGR_INSTALLER_DEPS REQUIRED pkgmgr-installer)
PKG_CHECK_MODULES(MINIZIP_DEPS REQUIRED minizip)
PKG_CHECK_MODULES(ZLIB_DEPS REQUIRED zlib)
PKG_CHECK_MODULES(OPENSSL_DEPS REQUIRED openssl)
PKG_CHECK_MODULES(TZPLATFORM_CONFIG_DEPS REQUIRED libtzplatform-config)
PKG_CHECK_MODULES(LIBXML_DEPS REQUIRED libxml-2.0)
PKG_CHECK_MODULES(XMLSEC1_DEPS REQUIRED xmlsec1)
PKG_CHECK_MODULES(SECURITY_MANAGER_DEPS REQUIRED security-manager)
PKG_CHECK_MODULES(VCONF_DEPS REQUIRED vconf)

FIND_PACKAGE(Boost REQUIRED COMPONENTS system filesystem)
FIND_PACKAGE(GTest REQUIRED)

# xmlsec1 - choose crypto library which to use
ADD_DEFINITIONS("-DXMLSEC_CRYPTO_OPENSSL")

ADD_SUBDIRECTORY(data)
ADD_SUBDIRECTORY(src)
