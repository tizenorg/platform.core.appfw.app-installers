CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12)
PROJECT(CommonAppInstaller)
SET(PREFIX "${CMAKE_INSTALL_PREFIX}")
SET(BINDIR "${CMAKE_INSTALL_PREFIX}/bin")
SET(LIBDIR "${CMAKE_INSTALL_LIBDIR}")
SET(SHAREDIR "${CMAKE_INSTALL_PREFIX}/share")
SET(INCLUDEDIR "${CMAKE_INSTALL_PREFIX}/include")
SET(VERSION_MAJOR 0)
SET(VERSION "${VERSION_MAJOR}.1.0")

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF(NOT CMAKE_BUILD_TYPE)

# Compiler flags
SET(EXTRA_FLAGS "-Wall -Wextra")
SET(CMAKE_C_FLAGS_PROFILING    "-O2 ${EXTRA_FLAGS}")
SET(CMAKE_CXX_FLAGS_PROFILING  "-O2 -std=c++11 ${EXTRA_FLAGS}")
SET(CMAKE_C_FLAGS_DEBUG        "-O0 -g ${EXTRA_FLAGS}")
SET(CMAKE_CXX_FLAGS_DEBUG      "-O0 -std=c++11 -g ${EXTRA_FLAGS}")
SET(CMAKE_C_FLAGS_RELEASE      "-O2 -g ${EXTRA_FLAGS}")
SET(CMAKE_CXX_FLAGS_RELEASE    "-O2 -std=c++11 -g ${EXTRA_FLAGS}")
SET(CMAKE_CXX_FLAGS_CCOV       "-O0 -std=c++11 -g --coverage ${EXTRA_FLAGS}")

# Linker flags
SET(EXTRA_LINKER_FLAGS "-Wl,--as-needed")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXTRA_LINKER_FLAGS}")

# Targets
SET(TARGET_LIBNAME_COMMON "app-installers")
SET(TARGET_PKGDIR_TOOL "pkgdir-tool")
SET(TARGET_PKG_INITDB "pkg_initdb")

ADD_DEFINITIONS("-DPROJECT_TAG=\"APP_INSTALLERS\"")

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/")
INCLUDE(FindPkgConfig)
INCLUDE(ApplyPkgConfig)

# Find all needed packages once
PKG_CHECK_MODULES(AUL_DEPS REQUIRED aul)
PKG_CHECK_MODULES(PKGMGR_DEPS REQUIRED pkgmgr)
PKG_CHECK_MODULES(PKGMGR_INSTALLER_DEPS REQUIRED pkgmgr-installer)
PKG_CHECK_MODULES(MINIZIP_DEPS REQUIRED minizip)
PKG_CHECK_MODULES(ZLIB_DEPS REQUIRED zlib)
PKG_CHECK_MODULES(TZPLATFORM_CONFIG_DEPS REQUIRED libtzplatform-config)
PKG_CHECK_MODULES(SECURITY_MANAGER_DEPS REQUIRED security-manager)
PKG_CHECK_MODULES(DELTA_MANIFEST_HANDLERS_DEPS REQUIRED delta-manifest-handlers)
PKG_CHECK_MODULES(TPK_MANIFEST_HANDLERS_DEPS REQUIRED tpk-manifest-handlers)
PKG_CHECK_MODULES(MANIFEST_PARSER_UTILS_DEPS REQUIRED manifest-parser-utils)
PKG_CHECK_MODULES(CERT_SVC_DEPS_VCORE_DEPS REQUIRED cert-svc-vcore)
PKG_CHECK_MODULES(PKGMGR_PARSER_DEPS REQUIRED pkgmgr-parser)
PKG_CHECK_MODULES(PKGMGR_INFO_DEPS REQUIRED pkgmgr-info)
PKG_CHECK_MODULES(LIBXML_DEPS REQUIRED libxml-2.0)
PKG_CHECK_MODULES(PRIVILEGE_CHECKER_DEPS REQUIRED security-privilege-manager)
PKG_CHECK_MODULES(TPK_MANIFEST_HANDLERS_DEPS REQUIRED tpk-manifest-handlers)
PKG_CHECK_MODULES(DBUS_DEPS REQUIRED dbus-1)
PKG_CHECK_MODULES(GDBUS_DEPS REQUIRED glib-2.0 gio-2.0)
PKG_CHECK_MODULES(GUM_DEPS REQUIRED libgum)
PKG_CHECK_MODULES(APP2SD_DEPS REQUIRED app2sd)
PKG_CHECK_MODULES(CAPI_SYSTEM_INFO_DEPS REQUIRED capi-system-info)

FIND_PACKAGE(Boost REQUIRED COMPONENTS system filesystem regex program_options)
FIND_PACKAGE(GTest REQUIRED)

ADD_SUBDIRECTORY(src)
